import type { Metadata, ResolvingMetadata } from 'next';
import { Inter } from 'next/font/google';
// import { Locale, i18n } from '../../i18n.config';
import '../../styles/globals.scss';
import Header from '../../Components/Layouts/Header';
import Footer from '../../Components/Layouts/Footer';
import { getTranslations } from 'next-intl/server';

const inter = Inter({ subsets: ['latin'] });

// export const metadata: Metadata = {
// 	title: 'Create Next App',
// 	description: 'Generated by create next app',
// };

// export async function generateStaticParams() {
// 	return i18n.locales.map((locale) => ({ lang: locale }));
// }
type Props= {
	params:{locale:string}
}
export async function generateMetadata({params:{locale}}:Props,parent:ResolvingMetadata):Promise<Metadata> {
	const t = await getTranslations({locale,namespace:"MetaData"})
	return {
		title:t("title"),
		description:t("description")
	}
}
export default function RootLayout({
	children,
	params: { locale },
}: {
	children: React.ReactNode;
	params: { locale: string };
}) {
	return (
		<html lang={locale}>
			<body className={inter.className}>
				<Header />
				<main>{children}</main>
				<Footer />
			</body>
		</html>
	);
}
